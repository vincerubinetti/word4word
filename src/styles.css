:root[data-dark="false"] {
  --primary: hsl(195, 100%, 35%);
  --secondary: hsl(10, 80%, 65%);

  --black: hsl(195, 50%, 25%);
  --dark-gray: hsl(195, 10%, 50%);
  --gray: hsl(195, 10%, 75%);
  --light-gray: hsl(10, 20%, 95%);
  --off-white: hsl(10, 50%, 98%);
  --white: hsl(10, 100%, 100%);

  --easy: hsl(170, 60%, 40%);
  --medium: hsl(250, 40%, 65%);
  --hard: hsl(340, 60%, 60%);
}

:root[data-dark="true"] {
  --primary: hsl(195, 80%, 50%);
  --secondary: hsl(10, 100%, 70%);

  --black: hsl(195, 100%, 100%);
  --dark-gray: hsl(195, 20%, 70%);
  --gray: hsl(195, 20%, 40%);
  --light-gray: hsl(195, 5%, 20%);
  --off-white: hsl(195, 10%, 10%);
  --white: hsl(195, 25%, 0%);

  --easy: hsl(170, 60%, 40%);
  --medium: hsl(250, 40%, 65%);
  --hard: hsl(340, 60%, 60%);
}

:root {
  --success: var(--easy);
  --error: var(--hard);
  --info: var(--primary);

  --bold: 600;
  --extra-bold: 900;

  --fast: 0.1s;
  --slow: 0.5s;
}

* {
  box-sizing: border-box;
}

html {
  background: var(--white);
  color: var(--black);
  font-family: "Quicksand", sans-serif;
  text-align: center;
}

body {
  margin: 0;
}

#app {
  display: flex;
  flex-direction: column;
  min-height: 100dvh;
}

main {
  display: flex;
  flex-grow: 1;
  flex-direction: column;
}

section {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 40px max(40px, (100% - 600px) / 2);
  gap: 20px;
}

section:first-child {
  flex-grow: 1;
}

section:nth-child(even) {
  border-top: solid 2px var(--light-gray);
  border-bottom: solid 2px var(--light-gray);
  background: var(--off-white);
}

h2 {
  margin: 0;
  color: var(--black);
  font-weight: var(--bold);
  font-size: 1.2rem;
}

strong,
b {
  font-weight: var(--bold);
}

p {
  width: 100%;
  margin: 0;
  line-height: 2;
  text-align: justify;
}

ul,
ol {
  width: 100%;
  margin: 0;
  padding-left: 30px;
  line-height: 2;
  text-align: left;
}

li {
  padding-left: 10px;
}

hr {
  width: 100%;
  height: 2px;
  margin: 40px 0;
  border: none;
  background: var(--light-gray);
}

a {
  color: var(--primary);
  transition-duration: var(--fast);
  transition-property: color, background, border-color;
}

a:hover {
  color: var(--black);
}

form {
  display: contents;
}

input {
  min-width: 0;
  max-width: 100%;
  min-height: 40px;
  padding: 5px 15px;
  border: solid 2px var(--light-gray);
  border-radius: 999px;
  background: var(--white);
  color: inherit;
  font: inherit;
  text-align: center;
  transition-duration: var(--fast);
  transition-property: border-color;
}

input:hover {
  border-color: var(--gray);
}

button {
  display: inline-flex;
  appearance: none;
  align-items: center;
  justify-content: center;
  max-width: 100%;
  padding: 5px 10px;
  gap: 5px;
  border: none;
  background: none;
  color: inherit;
  font: inherit;
  cursor: pointer;
  transition-duration: var(--fast);
  transition-property: background, color;
}

button.primary {
  min-width: 100px;
  min-height: 40px;
  border-radius: 999px;
  background: var(--primary);
  color: var(--white);
}

button.primary:hover {
  background: var(--black);
}

button.secondary {
  min-width: 100px;
  min-height: 40px;
  border-radius: 999px;
  color: var(--primary);
}

button.secondary:hover {
  background: var(--light-gray);
}

button.square {
  width: 40px;
  min-width: unset;
  height: 40px;
  min-height: unset;
  padding: 0;
  border-radius: 999px;
}

.inactive,
.active {
  position: relative;
  border-radius: 0;
}

.inactive::after,
.active::after {
  position: absolute;
  right: 0;
  bottom: -2px;
  left: 0;
  height: 2px;
  scale: 0 0;
  background: var(--primary);
  content: "";
  transition-property: scale;
  transition: var(--fast);
}

.active::after {
  scale: 1 1;
}

::placeholder {
  color: var(--gray);
}

[disabled] {
  filter: saturate(0);
  opacity: 0.5;
  pointer-events: none;
}

:focus-visible {
  outline: solid 2px var(--primary);
  outline-offset: -2px;
}

/** https://github.com/tailwindlabs/headlessui/issues/2583 */
html:not([data-headlessui-focus-visible]) :focus-visible {
  outline: none;
}

.gray {
  color: var(--gray);
}

.success {
  color: var(--success);
}

.info {
  color: var(--info);
}

.error {
  color: var(--error);
}

.lucide {
  width: unset;
  height: 1em;
}

.tippy-box {
  padding: 2px !important;
  border-radius: 0 !important;
  background: var(--black) !important;
  color: var(--white) !important;
  font: inherit !important;
}

.tippy-arrow {
  color: var(--black) !important;
}

.tippy-arrow::before {
  scale: 0.75 !important;
}

.pulse {
  animation: pulse 1s var(--delay, 0s) infinite both;
}

@keyframes pulse {
  50% {
    scale: 1.25;
  }
}

.flip {
  animation: flip var(--slow) var(--delay, 0s) both;
}

@keyframes flip {
  0% {
    scale: 1 0;
    filter: drop-shadow(0 30px var(--gray));
  }
}

.wiggle-char {
  display: inline-block;
  white-space: pre-wrap;
}

.wiggle-always {
  animation: wiggle 3s var(--delay, 0s) infinite both
    cubic-bezier(0.5, 0, 0.5, 1);
}

:has(> .wiggle-hover):hover .wiggle-hover {
  animation: wiggle 3s var(--delay, 0s) infinite both
    cubic-bezier(0.5, 0, 0.5, 1);
}

@keyframes wiggle {
  0% {
    translate: 0 0;
    filter: drop-shadow(0 0 var(--gray));
  }

  10% {
    translate: 0 -0.2em;
    filter: drop-shadow(0 0.2em var(--gray));
  }
  20% {
    translate: 0 0;
    filter: drop-shadow(0 0 var(--gray));
  }
}

.slide-enter-active,
.slide-leave-active {
  transition-duration: var(--fast);
  transition-property: translate, opacity;
  transition-timing-function: cubic-bezier(0.5, 0, 0.5, 1);
}

.slide-enter-from {
  translate: 0 10px;
  opacity: 0;
}

.slide-leave-to {
  translate: 0 -10px;
  opacity: 0;
}

.particle {
  position: fixed;
  top: var(--y);
  left: var(--x);
  width: var(--size);
  height: var(--size);
  background: var(--black);
  animation: particle 1s linear;
  mix-blend-mode: difference;
  pointer-events: none;
  --star-open: polygon(
    50% 100%,
    60% 60%,
    100% 50%,
    60% 40%,
    50% 0%,
    40% 40%,
    0% 50%,
    40% 60%,
    50% 100%
  );
  --star-closed: polygon(
    50% 100%,
    50% 50%,
    100% 50%,
    50% 50%,
    50% 0%,
    50% 50%,
    0% 50%,
    50% 50%,
    50% 100%
  );
}

@keyframes particle {
  0% {
    clip-path: var(--star-closed);
  }

  50% {
    clip-path: var(--star-open);
  }

  100% {
    translate: 0 calc(-1 * var(--size));
    clip-path: var(--star-closed);
  }
}
